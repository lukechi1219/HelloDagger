apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

final DAGGER_VERSION = '2.17'
final MOCKITO_VERSION = '2.23.4'
final TEST_SUPPORT_VERSION = '1.0.2'
final ESPRESSO_VERSION = '3.0.2'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.lukechi.android.hellodagger"
        minSdkVersion 23
        targetSdkVersion 28
        multiDexEnabled true
        versionCode 1
        versionName "1.0"
        // testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "com.lukechi.android.hellodagger.MyTestInstrumentationRunner"
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // ???
//    configurations.all {
//        resolutionStrategy.force 'com.android.support:support-annotations:26.1.0'
//    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    // https://proandroiddev.com/android-jetpack-foundation-multidex-part-1-chapter-3-64a3e43c92dc
    // AndroidX is the open-source project that the Android team uses to develop, test, package, version and release libraries within Jetpack.
    // AndroidX is a major improvement to the original Android Support Library.
    implementation 'androidx.multidex:multidex:2.0.1'
    // implementation 'com.android.support:multidex:1.0.3' // old way

    compileOnly 'javax.annotation:jsr250-api:1.0'
    implementation 'joda-time:joda-time:2.9.9'

    implementation "com.google.dagger:dagger:${DAGGER_VERSION}"
    implementation "com.google.dagger:dagger-android:${DAGGER_VERSION}"
    implementation "com.google.dagger:dagger-android-support:${DAGGER_VERSION}"
    kapt "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"
    kapt "com.google.dagger:dagger-android-processor:${DAGGER_VERSION}"

    testImplementation 'junit:junit:4.12'
    testImplementation 'com.google.truth:truth:0.34'
    //
    testImplementation "com.google.dagger:dagger:${DAGGER_VERSION}"
    testImplementation "com.google.dagger:dagger-android:${DAGGER_VERSION}"
    testImplementation "com.google.dagger:dagger-android-support:${DAGGER_VERSION}"
    // Android Test
    kaptAndroidTest "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"
    kaptAndroidTest "com.google.dagger:dagger-android-processor:${DAGGER_VERSION}"
    // JUnit test
    kaptTest "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"
    kaptTest "com.google.dagger:dagger-android-processor:${DAGGER_VERSION}"
//    //
//    testImplementation 'com.github.fabioCollini.daggermock:daggermock:0.8.4'
//    androidTestImplementation 'com.github.fabioCollini.daggermock:daggermock:0.8.4'
    //
    testImplementation "org.mockito:mockito-core:${MOCKITO_VERSION}"
    androidTestImplementation "org.mockito:mockito-android:${MOCKITO_VERSION}"
    //
    androidTestImplementation "com.android.support.test:runner:${TEST_SUPPORT_VERSION}"
    androidTestImplementation "com.android.support.test:rules:${TEST_SUPPORT_VERSION}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${ESPRESSO_VERSION}"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:${ESPRESSO_VERSION}"
}
